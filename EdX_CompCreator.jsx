//////////////////////////////////////////////////////////////////////////////////////////////////////////// GLOBAL VARIABLES AND FUNCTIONS ////////////////////////////////////////////////////////////////////////////////////////////////////////////// Creates variable shortcut for app.projectvar myProj = app.project;// Creating variables for template foldersvar Templates = getProjectID("Templates");// Creating variables for Comp foldersvar CompsIntro = getProjectID("Comps_intro");var CompsOutro = getProjectID("Comps_outro");var CompsFinal = getProjectID("Comps_FINAL");// Creating variable for footage foldervar importedFootage = getProjectID("Imported Footage");// Misc variablesvar vidExtension = ".mov"; // To be changed depending on output from Premierevar scriptTitle = "EdX CompCreator";// Instantiating panel windowvar myPalette = buildUI(this);if (myPalette != null && myPalette instanceof Window) {	myPalette.show();}// This function searches the entire Project folder and returns the relevant items index ID (can be folder, footage, item, etc)function getProjectID(str) {    for (var i = 1; i <= myProj.numItems; i ++) {        if (myProj.item(i).name === str) {            return myProj.item(i);            }    }}// function getProjectID(str) { // This function creates the main CompCreator dockable window to hold all of the potential actions (Create, Update, Render)function buildUI (thisObject) {    if (thisObject instanceof Panel) {        var myPalette = thisObject;    } else {         var myPalette = new Window ("palette", scriptTitle, undefined, {resizeable: true});    }    if (myPalette != null) {                var res =         "Group { \            orientation: 'column', \            alignment: ['fill', 'top'], \            alignChildren: ['fill', 'top'], \                createPanel: Panel { \                    text: 'Create comps', \                    alignChildren: ['fill', 'top'], \                    createAllBtn: Button {text:'Create ALL comps', preferredSize: [75, 50]}, \                    renderAllBtn: Button {text:'Render first frames', preferredSize: [75, 50]}, \                    }, \            }";                    myPalette.grp = myPalette.add(res);        myPalette.layout.layout(true);        myPalette.layout.resize();                // Create ALL comps button and onClick action        myPalette.grp.createPanel.createAllBtn.onClick = function () {                createAllComps(myPalette);        }            // Render first frames button and onClick action        myPalette.grp.createPanel.renderAllBtn.onClick = function () {                renderFirstFrame(myPalette);        }                myPalette.onResizing = myPalette.onResize = function () {this.layout.resize();}        } // if (myPalette != null) {    return myPalette;} //function buildUI () function renderFirstFrame(palObj) {    if(CompsIntro.numItems === 0) {        alert("No comps in folder");        } else {             var footOpen = Folder.selectDialog("Please select folder to save PNGs to");        var footDir = footOpen.absoluteURI+"/";                        for(var i = 1; i <= CompsIntro.numItems; i++) {                 var comp = CompsIntro.items[i];                        var filename = comp.name;            filename = filename.slice(0, -6);                        var file = new File(footDir+filename+".png");            comp.saveFrameToPng(0, file);                }                alert(CompsIntro.numItems + " PNG files saved to folder");    }} // function renderFirstFrame(palObj) {function createAllComps(palObj) {             // Selecting and reading CSV    var spreadsheet = File.openDialog("Please select .csv file");    var readOK = spreadsheet.open("r");        var footOpen = Folder.selectDialog("Please select folder that contains Premiere footage");    var footDir = footOpen.absoluteURI+"/";        // Create undogroup for quick ctrl+Z use        app.beginUndoGroup("Bulk comp creation");    // If CSV is read OK, begin creating comps    if (readOK) {                        // This loops through CSV, first creating an array and from that, an object for each row.        var spreadsheetContents = spreadsheet.read();        var itemsArray = spreadsheetContents.split(/\n|\r/);        var itemsObject = new Object();        for (var i=1; i < itemsArray.length; i++) {             itemsArray[i] = itemsArray[i].split(",");            itemsObject[i] = {                vidCode: itemsArray[i][0],                 introVid: itemsArray[i][1],                 outroVid: itemsArray[i][2],                courseTitle: itemsArray[i][3],                sessionTitle: itemsArray[i][4],                instructor: itemsArray[i][5],                vidTitle: itemsArray[i][6],                pt11: itemsArray[i][7],                pt12: itemsArray[i][8],                pt21: itemsArray[i][9],                pt22: itemsArray[i][10],                pt31: itemsArray[i][11],                pt32: itemsArray[i][12],            } //itemsObject[i] = {        } // for (var i=0; i < itemsArray.length; i++) {                           // Cycle through itemsObject to create comp            for (var i in itemsObject){                            var vidType = itemsObject[i].introVid; // create var to check for type of video                var introComp = getProjectID(itemsObject[i].introVid);                var outroComp = getProjectID(itemsObject[i].outroVid);                var newCourse = itemsObject[i].courseTitle;                var newSession = itemsObject[i].sessionTitle;                var newInstructor = itemsObject[i].instructor;                var vidTitle = itemsObject[i].vidTitle;                var point11 = itemsObject[i].pt11;                var point12 = itemsObject[i].pt12;                var point21 = itemsObject[i].pt21;                var point22 = itemsObject[i].pt22;                                    var point31 = itemsObject[i].pt31;                var point32 = itemsObject[i].pt32;                                 // Import footage from folder                var fileName = itemsObject[i].vidCode+vidExtension;                var importedFile = myProj.importFile(new ImportOptions(new File(footDir+fileName)));                importedFile.parentFolder = importedFootage;                                if(vidType.indexOf("Author") !== -1) { // this is an author video                               ///////////// BEGIN INTRO CREATION //////////////                                                                       // Duplicating intro template                    var newIntroComp = introComp.duplicate();                    // Renaming duplicated intro                    newIntroComp.name = itemsObject[i].vidCode+"_intro";                    // Updating course line                     newIntroComp.layer(1).property("Source Text").setValue(newCourse);                                    // Updating topic line                    newIntroComp.layer(2).property("Source Text").setValue(newSession);                                 // Updating instructor line                    newIntroComp.layer(3).property("Source Text").setValue(newInstructor);                    // Updating each point                    newIntroComp.layer(5).property("Source Text").setValue(point11);                    newIntroComp.layer(6).property("Source Text").setValue(point12);                    newIntroComp.layer(8).property("Source Text").setValue(point21);                    newIntroComp.layer(9).property("Source Text").setValue(point22);                    newIntroComp.layer(11).property("Source Text").setValue(point31);                    newIntroComp.layer(12).property("Source Text").setValue(point32);                    // Updating video title                    newIntroComp.layer(13).property("Source Text").setValue(vidTitle);                ///////////// END INTRO CREATION //////////////                                ///////////// BEGIN OUTRO CREATION //////////////                                        // Duplicating template title                    var newOutroComp = outroComp.duplicate();                    newOutroComp.name = itemsObject[i].vidCode+"_outro";                    // Updating course line                    newOutroComp.layer(2).property("Source Text").setValue(newCourse);                    // Updating topic line                    newOutroComp.layer(3).property("Source Text").setValue(newSession);                    // Updating instructor line                    newOutroComp.layer(4).property("Source Text").setValue(newInstructor);                    // Updating each point                    newOutroComp.layer(6).property("Source Text").setValue(point11);                    newOutroComp.layer(7).property("Source Text").setValue(point12);                    newOutroComp.layer(9).property("Source Text").setValue(point21);                    newOutroComp.layer(10).property("Source Text").setValue(point22);                    newOutroComp.layer(12).property("Source Text").setValue(point31);                    newOutroComp.layer(13).property("Source Text").setValue(point32);                ///////////// END OUTRO CREATION //////////////                                ///////////// BEGIN CREATE COMP //////////////                                        // Creating variable to hold transition offset between intro and main video/bg.                    var introOffset = 10;                    var outroOffset = 0.7;                                            // getProjID for video in "Premiere Footage" folder (also gives access to duration value)                    var videoLayer = getProjectID(fileName);                                            // This calculates total length of video in seconds (for comp settings)                    var vidLength = newIntroComp.duration - introOffset + videoLayer.duration + newOutroComp.duration - outroOffset;                                            // Creating a new comp for the video                    // addComp(name, width, height, pixelAspect, duration, frameRate)                    var currentComp = myProj.items.addComp(itemsObject[i].vidCode, 1920, 1080, 1, vidLength, 29.97);                                                // Add each layer                    var mainVideoLayer = currentComp.layers.add(videoLayer); //layer(3)                    var newOutroCompLayer = currentComp.layers.add(newOutroComp); //layer(2)                    var newIntroCompLayer = currentComp.layers.add(newIntroComp); //layer(1)                    // Aligning timeline                    mainVideoLayer.startTime = newIntroCompLayer.outPoint-introOffset; // main video to start near end (see offset value) of intro                    newOutroCompLayer.startTime = mainVideoLayer.outPoint-outroOffset; // outroMov starts where video ends                                        /*                    LAYER ORDER AT THIS POINT                        layer(1) = introComp                    layer(2) = outroComp                    layer(3) = videoLayer                             */                                    // Place the comps in relevant folders                    currentComp.parentFolder = CompsFinal;                    newIntroComp.parentFolder = CompsIntro;                                        newOutroComp.parentFolder = CompsOutro;                            ///////////// END CREATE COMP //////////////                                                } else { // this is a feedback video                ///////////// BEGIN INTRO CREATION //////////////                                        // Duplicating intro template                    var newIntroComp = introComp.duplicate();                    // Renaming duplicated intro                    newIntroComp.name = itemsObject[i].vidCode+"_intro";                    // Updating course line                     newIntroComp.layer(4).property("Source Text").setValue(newCourse);                                    // Updating topic line                    newIntroComp.layer(3).property("Source Text").setValue(newSession);                                 // Updating instructor line                    newIntroComp.layer(2).property("Source Text").setValue(newInstructor);                    // Updating video title                    newIntroComp.layer(5).property("Source Text").setValue(vidTitle);                                ///////////// END INTRO CREATION //////////////                                ///////////// BEGIN OUTRO CREATION //////////////                                        // Duplicating template title                    var newOutroComp = outroComp.duplicate();                    newOutroComp.name = itemsObject[i].vidCode+"_outro";                    // Updating course line                    newOutroComp.layer(5).property("Source Text").setValue(newCourse);                    // Updating topic line                    newOutroComp.layer(4).property("Source Text").setValue(newSession);                    // Updating instructor line                    newOutroComp.layer(3).property("Source Text").setValue(newInstructor);                               ///////////// END OUTRO CREATION //////////////                                ///////////// BEGIN CREATE COMP //////////////                                        // Creating variable to hold transition offset between intro and main video/bg.                    var introOffset = 8;                    var outroOffset = 0.7;                                            // getProjID for video in "Premiere Footage" folder (also gives access to duration value)                    var videoLayer = getProjectID(fileName);                                            // This calculates total length of video in seconds (for comp settings)                    var vidLength = newIntroComp.duration - introOffset + videoLayer.duration + newOutroComp.duration - outroOffset;                                            // Creating a new comp for the video                    // addComp(name, width, height, pixelAspect, duration, frameRate)                    var currentComp = myProj.items.addComp(itemsObject[i].vidCode, 1920, 1080, 1, vidLength, 29.97);                                                // Add each layer                    var mainVideoLayer = currentComp.layers.add(videoLayer); //layer(3)                    var newOutroCompLayer = currentComp.layers.add(newOutroComp); //layer(2)                    var newIntroCompLayer = currentComp.layers.add(newIntroComp); //layer(1)                    // Aligning timeline                    mainVideoLayer.startTime = newIntroCompLayer.outPoint-introOffset; // main video to start near end (see offset value) of intro                    newOutroCompLayer.startTime = mainVideoLayer.outPoint-outroOffset; // outroMov starts where video ends                                        /*                    LAYER ORDER AT THIS POINT                        layer(1) = introComp                    layer(2) = outroComp                    layer(3) = videoLayer                             */                                    // Place the comps in folders                    currentComp.parentFolder = CompsFinal;                    newIntroComp.parentFolder = CompsIntro;                    newOutroComp.parentFolder = CompsOutro;                            ///////////// END CREATE COMP //////////////                                   }                                        } // for (var i in itemsObject)                            alert("Comp creation complete");                        } else {            alert("Error opening CSV file");        } // if (readOK)    app.endUndoGroup();            } // function createAllComps(palObj) {